// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fgk.Persistence;

#nullable disable

namespace fgk.Persistence.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    partial class MovieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenreEntityMovieEntity", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("integer");

                    b.Property<int>("MoviesOfThisGenreId")
                        .HasColumnType("integer");

                    b.HasKey("GenresId", "MoviesOfThisGenreId");

                    b.HasIndex("MoviesOfThisGenreId");

                    b.ToTable("GenreEntityMovieEntity");
                });

            modelBuilder.Entity("KeywordEntityMovieEntity", b =>
                {
                    b.Property<int>("KeywordsId")
                        .HasColumnType("integer");

                    b.Property<int>("MoviesWithThisKeywordId")
                        .HasColumnType("integer");

                    b.HasKey("KeywordsId", "MoviesWithThisKeywordId");

                    b.HasIndex("MoviesWithThisKeywordId");

                    b.ToTable("KeywordEntityMovieEntity");
                });

            modelBuilder.Entity("MovieEntityProductionCountryEntity", b =>
                {
                    b.Property<int>("MoviesFromThisCountryId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductionCountriesId")
                        .HasColumnType("integer");

                    b.HasKey("MoviesFromThisCountryId", "ProductionCountriesId");

                    b.HasIndex("ProductionCountriesId");

                    b.ToTable("MovieEntityProductionCountryEntity");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.CastEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FromMovieId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromMovieId");

                    b.ToTable("Cast");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.CrewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FromMovieId")
                        .HasColumnType("integer");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromMovieId");

                    b.ToTable("Crew");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.KeywordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Budget")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IMDbRating")
                        .HasColumnType("integer");

                    b.Property<int>("LikesAmount")
                        .HasColumnType("integer");

                    b.Property<int?>("MetacriticRating")
                        .HasColumnType("integer");

                    b.Property<string>("PosterURL")
                        .HasColumnType("text");

                    b.Property<string>("Rated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("Revenue")
                        .HasColumnType("bigint");

                    b.Property<int?>("RottenTomatoesRating")
                        .HasColumnType("integer");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tagline")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.ProductionCountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductionCountries");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.VideoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromMovieId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("YouTubeURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromMovieId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("GenreEntityMovieEntity", b =>
                {
                    b.HasOne("fgk.Persistence.Entities.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fgk.Persistence.Entities.MovieEntity", null)
                        .WithMany()
                        .HasForeignKey("MoviesOfThisGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KeywordEntityMovieEntity", b =>
                {
                    b.HasOne("fgk.Persistence.Entities.KeywordEntity", null)
                        .WithMany()
                        .HasForeignKey("KeywordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fgk.Persistence.Entities.MovieEntity", null)
                        .WithMany()
                        .HasForeignKey("MoviesWithThisKeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieEntityProductionCountryEntity", b =>
                {
                    b.HasOne("fgk.Persistence.Entities.MovieEntity", null)
                        .WithMany()
                        .HasForeignKey("MoviesFromThisCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fgk.Persistence.Entities.ProductionCountryEntity", null)
                        .WithMany()
                        .HasForeignKey("ProductionCountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fgk.Persistence.Entities.CastEntity", b =>
                {
                    b.HasOne("fgk.Persistence.Entities.MovieEntity", "FromMovie")
                        .WithMany("Cast")
                        .HasForeignKey("FromMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromMovie");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.CrewEntity", b =>
                {
                    b.HasOne("fgk.Persistence.Entities.MovieEntity", "FromMovie")
                        .WithMany("Crew")
                        .HasForeignKey("FromMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromMovie");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.VideoEntity", b =>
                {
                    b.HasOne("fgk.Persistence.Entities.MovieEntity", "FromMovie")
                        .WithMany("Videos")
                        .HasForeignKey("FromMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromMovie");
                });

            modelBuilder.Entity("fgk.Persistence.Entities.MovieEntity", b =>
                {
                    b.Navigation("Cast");

                    b.Navigation("Crew");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
